@page "/doctor/prescription/{patientId:int}"
@using ClinicManagementSystem.Shared.DTOs
@using Microsoft.AspNetCore.Components.Forms
@using System.Net.Http.Json
@using global::Shared.DTOs

@inject HttpClient Http

<h3>Prescription for Patient @patient.Name</h3>

@if (isLoading)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="prescription" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label for="tabletName">Tablet Name:</label>
            <InputSelect id="tabletName" @bind-Value="prescription.TabletName">
                @foreach (var tablet in tabletList)
                {
                    <option value="@tablet">@tablet</option>
                }
            </InputSelect>
        </div>

        <div>
            <label for="quantity">Quantity:</label>
            <InputNumber id="quantity" @bind-Value="prescription.Quantity" />
        </div>

        <div>
            <label for="timesPerDay">Times per Day:</label>
            <InputNumber id="timesPerDay" @bind-Value="prescription.TimesPerDay" />
        </div>

        <button type="submit">Add Prescription</button>
    </EditForm>

    <h4>Existing Prescriptions</h4>
    <table>
        <thead>
            <tr>
                <th>Tablet Name</th>
                <th>Quantity</th>
                <th>Times per Day</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in prescriptions)
            {
                <tr>
                    <td>@item.TabletName</td>
                    <td>@item.Quantity</td>
                    <td>@item.TimesPerDay</td>
                    <td>
                        <button @onclick="() => EditPrescription(item)">Edit</button>
                        <button @onclick="() => DeletePrescription(item.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int patientId { get; set; }

    private bool isLoading = true;
    private PrescriptionDto prescription = new PrescriptionDto();
    private List<PrescriptionDto> prescriptions = new List<PrescriptionDto>();
    private List<string> tabletList = new List<string> { "Tablet A", "Tablet B", "Tablet C" }; // Example tablet names
    private PatientDto patient;

    protected override async Task OnInitializedAsync()
    {
        patient = await Http.GetFromJsonAsync<PatientDto>($"api/patient/{patientId}");
        prescriptions = await Http.GetFromJsonAsync<List<PrescriptionDto>>($"api/prescription/{patientId}");
        isLoading = false;
    }

    private async Task HandleValidSubmit()
    {
        prescription.PatientId = patientId;
        await Http.PostAsJsonAsync("api/prescription", prescription);
        prescriptions.Add(prescription);
        prescription = new PrescriptionDto(); // Reset form
    }

    private void EditPrescription(PrescriptionDto item)
    {
        prescription = item; // Load item into form for editing
    }

    private async Task DeletePrescription(int id)
    {
        await Http.DeleteAsync($"api/prescription/{id}");
        prescriptions.RemoveAll(p => p.PrescriptionId == id);
    }
}